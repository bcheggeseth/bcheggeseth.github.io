{
  "hash": "3a5bf5c08237a5edee824077085d1b61",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hot Ones Episodes\"\ndate: \"2023-08-08\"\nimage: tt20230808.jpeg\nabout: \n  template: solana\n  image: tt20230808.jpeg\n---\n\n\n\n\n\n\n## Data Context\n\n# Hot Ones Episodes \n\nThe data this week comes from Wikipedia articles: [*Hot Ones*](https://en.wikipedia.org/wiki/Hot_Ones) and [List of Hot Ones episodes](https://en.wikipedia.org/wiki/List_of_Hot_Ones_episodes). Thank you to [Carl Börstell](https://github.com/borstell) for the [suggestion and cleaning script](https://github.com/rfordatascience/tidytuesday/issues/591)!\n\n> Hot Ones is an American YouTube talk show, created by Chris Schonberger, hosted by Sean Evans and produced by First We Feast and Complex Media. Its basic premise involves celebrities being interviewed by Evans over a platter of increasingly spicy chicken wings.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nepisodes <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-08/episodes.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 300 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): title, guest\ndbl  (4): season, episode_overall, episode_season, guest_appearance_number\nlgl  (1): finished\ndate (1): original_release\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nsauces <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-08/sauces.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 210 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): sauce_name\ndbl (3): season, sauce_number, scoville\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nseasons <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-08-08/seasons.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 21 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): note\ndbl  (2): season, episodes\ndate (2): original_release, last_release\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(episodes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 8\n  season episode_overall episode_season title             original_release guest\n   <dbl>           <dbl>          <dbl> <chr>             <date>           <chr>\n1      1               1              1 Tony Yayo Talks … 2015-03-12       Tony…\n2      1               2              2 Anthony Rizzo On… 2015-05-12       Anth…\n3      1               3              3 Machine Gun Kell… 2015-06-11       Mach…\n4      1               4              4 Gunplay Talks Ri… 2015-06-23       Gunp…\n5      1               5              5 Ja Rule Talks 50… 2015-08-11       Ja R…\n6      1               6              6 B.o.B. Talks Egg… 2015-08-26       B.o.…\n# ℹ 2 more variables: guest_appearance_number <dbl>, finished <lgl>\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(sauces)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  season sauce_number sauce_name                                        scoville\n   <dbl>        <dbl> <chr>                                                <dbl>\n1      1            1 Texas Pete Original Hot Sauce                          747\n2      1            2 Cholula Original Hot Sauce                            3600\n3      1            3 El Yucateco Caribbean Hot Sauce – Chile Habanero      5790\n4      1            4 Lottie's Traditional Barbados Yellow Hot Pepper …    12000\n5      1            5 Pain is Good – Louisiana Style                       13000\n6      1            6 Pain 100%                                            20600\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n  season episodes note  original_release last_release\n   <dbl>    <dbl> <chr> <date>           <date>      \n1      1        8 <NA>  2015-03-12       2015-10-22  \n2      2       40 <NA>  2015-12-10       2016-12-22  \n3      3       24 <NA>  2017-01-19       2017-06-29  \n4      4       24 <NA>  2017-07-20       2017-12-28  \n5      5       16 <NA>  2018-01-18       2018-05-03  \n6      6       13 <NA>  2018-06-07       2018-09-06  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nepisodes %>% \n  left_join(sauces %>% filter(sauce_number == 10)) %>%\n  ggplot(aes(x = factor(scoville), fill = finished)) +\n  geom_bar(position = 'fill')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(season)`\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\nepisodes %>% \n  left_join(sauces %>% filter(sauce_number == 10)) %>%\n  ggplot(aes(x = season, fill = finished)) +\n  geom_bar(position = 'fill') + facet_wrap(~ scoville)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(season)`\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsauces %>%\n  ggplot(aes(y = scoville, x = sauce_number,color = season, group = season))  + \n  geom_line() + \n  labs(y = 'Socville (Spicy Level)', x = 'Sauce Order', title = 'Hot Ones Spicy Levels across Seasons') + \n  scale_x_continuous(breaks = 1:10) +\n  scale_color_gradient(low = 'grey',high='red')\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlibrary(gganimate)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNo renderer backend detected. gganimate will default to writing frames to separate files\nConsider installing:\n- the `gifski` package for gif output\n- the `av` package for video output\nand restarting the R session\n```\n\n\n:::\n\n```{.r .cell-code}\nsauces %>%\n  ggplot(aes(y = scoville, x = sauce_number, group = season))  + \n  geom_line(color = 'red') + \n  labs(y = 'Socville (Spicy Level)', x = 'Sauce Order', title = 'Hot Ones Spicy Levels across Seasons', subtitle = 'Season {round(frame_time)}') + \n  scale_x_continuous(breaks = 1:10) +\n  transition_time(season) +\n  shadow_mark(colour = 'grey', size = 0.75)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: No renderer available. Please install the gifski, av, or magick package to\ncreate animated output\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNULL\n```\n\n\n:::\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}